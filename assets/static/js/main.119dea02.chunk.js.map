{"version":3,"sources":["../../web/types/remote.js","settings/state.js","serviceWorker.js","types/component.js","components/FabricBridge.js","components/FabricTransactionList.js","components/FabricModal.js","components/FaucetDripForm.js","Home.js","App.js","index.js"],"names":["P2P_CALL","require","querystring","fetch","parser","Actor","WebSocket","Message","CONTENT_TYPE","Remote","config","settings","Object","assign","authority","backoff","entropy","Math","random","secure","host","port","socket","endpoint","_nextReconnect","_reconnectAttempts","_state","status","messages","meta","count","this","Buffer","Uint8Array","buffer","isArrayBufferSupported","arrayBufferToBufferAsArgument","arrayBufferToBufferCycle","ab","byteLength","view","i","length","message","console","log","_reconnector","setTimeout","connect","bind","pow","error","emit","packet","JSON","stringify","data","from","fromRaw","toObject","push","clearTimeout","name","params","call","fromVector","toRaw","send","exception","binaryType","addEventListener","_handleSocketClose","_handleSocketOpen","_handleSocketMessage","_handleSocketError","_OPTIONS","options","results","definition","description","components","list","routes","attributes","names","type","path","parts","self","split","protocol","url","result","response","opts","method","headers","username","password","join","toString","mode","body","ok","formatter","parse","get","json","verbosity","text","warn","created","Date","toISOString","msg","raw","actor","content","id","key","request","obj","module","exports","playnet","seed","balances","asset","symbol","confirmed","chains","tip","genesis","channels","keys","identity","nodes","orders","peers","alias","transactions","Boolean","window","location","hostname","match","FabricComponent","props","import","state","merge","integrity","ec","EC","ref","React","createRef","dochash","start","setState","hash","Card","Content","children","constructor","Component","FabricBridge","defaults","remote","_syncState","executeMethod","ping","fluid","Button","Group","floated","onClick","Icon","Header","as","Feed","map","Event","size","style","fontSize","fontFamily","color","extra","Label","a","on","remoteReady","_handleRemoteMessage","_handleRemoteError","TransactionList","concat","className","Table","celled","Row","HeaderCell","Body","transaction","index","Cell","version","inputs","outputs","signature","FabricModal","open","Modal","modal","onClose","onOpen","image","Image","src","wrapped","Description","Actions","labelPosition","icon","positive","FaucetDripForm","network","address","requests","secret","bitcoin","mainnet","regtest","testnet","e","target","value","validateAddress","errors","fields","Form","form","loading","undefined","disabled","onSubmit","onChange","handleChange","Field","Input","field","action","placeholder","button","attached","sync","preimage","createHash","update","digest","toOutputScript","networks","Home","debug","bridge","current","then","Visibility","onBottomPassed","_handleMastheadBottomPassed","Segment","Container","marginTop","display","_handleRemoteReady","event","calculations","App","snapshots","exact","element","FabricTransactionList","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.119dea02.chunk.js","sourcesContent":["'use strict';\n\nconst {\n  P2P_CALL\n} = require('@fabric/core/constants');\n\n// Internal Dependencies\nconst http = require('http');\nconst https = require('https');\nconst querystring = require('querystring');\n\n// External Dependencies\nconst fetch = require('node-fetch');\nconst parser = require('content-type');\nconst ws = require('ws').WebSocket;\n\n// Internal Types\nconst Actor = require('@fabric/core/types/actor');\nconst Message = require('@fabric/core/types/message');\nconst CONTENT_TYPE = 'application/json';\n\n/**\n * Interact with a remote {@link Resource}.  This is currently the only\n * HTTP-related code that should remain in @fabric/core — all else must\n * be moved to @fabric/http before final release!\n * @type {Remote}\n * @property {Object} config\n * @property {Boolean} secure\n */\nclass Remote extends Actor {\n  /**\n   * An in-memory representation of a node in our network.\n   * @param       {Object} target - Target object.\n   * @param       {String} target.host - Named host, e.g. \"localhost\".\n   * @param       {String} target.secure - Require TLS session.\n   * @constructor\n   */\n  constructor (config = {}) {\n    super(config);\n\n    this.settings = Object.assign({\n      authority: 'localhost',\n      backoff: 2,\n      entropy: Math.random(),\n      secure: true,\n      host: 'hub.fabric.pub',\n      port: 443\n    }, config);\n\n    this.host = this.settings.host || this.settings.authority;\n    this.secure = this.settings.secure;\n    this.socket = null;\n\n    this.endpoint = `${(this.secure) ? 'wss' : 'ws'}:${this.host}:${this.port}/`;\n\n    this._nextReconnect = 0;\n    this._reconnectAttempts = 0;\n    this._state = {\n      status: 'PAUSED',\n      messages: [],\n      meta: {\n        messages: {\n          count: 0\n        }\n      }\n    };\n\n    return this;\n  }\n\n  get port () {\n    return this.settings.port;\n  }\n\n  get isArrayBufferSupported () {\n    return (new Buffer(new Uint8Array([1]).buffer)[0] === 1);\n  }\n\n  get arrayBufferToBuffer () {\n    return this.isArrayBufferSupported ? this.arrayBufferToBufferAsArgument : this.arrayBufferToBufferCycle;\n  }\n    \n  arrayBufferToBufferAsArgument (ab) {\n    return new Buffer(ab);\n  }\n\n  arrayBufferToBufferCycle (ab) {\n    var buffer = new Buffer(ab.byteLength);\n    var view = new Uint8Array(ab);\n    for (var i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n    }\n    return buffer;\n  }\n\n  async _handleSocketClose (message) {\n    this._state.status = 'CLOSED';\n    console.log('[FABRIC:REMOTE]', 'Socket close:', message);\n    console.log('reconnecting:', this._reconnectAttempts, this._nextReconnect);\n    this._reconnectAttempts++;\n    this._reconnector = setTimeout(this.connect.bind(this), this._nextReconnect);\n    this._nextReconnect = Math.pow(this.settings.backoff, this._reconnectAttempts) * 1000 * Math.random();\n  }\n\n  async _handleSocketError (message) {\n    console.error('[FABRIC:REMOTE]', 'Socket error:', message);\n    this.emit('error', message);\n  }\n\n  async _handleSocketMessage (packet) {\n    this.emit('debug', `[FABRIC:REMOTE] Socket packet ${JSON.stringify(packet)}`);\n    const length = packet.data.byteLength;\n    console.log('length:', length);\n    const buffer = Buffer.from(packet.data);\n    console.log('buffer:', buffer);\n    const message = Message.fromRaw(buffer).toObject();\n    console.log('message:', message);\n    this._state.messages.push(message);\n    ++this._state.meta.messages.count;\n    this.emit('message', message);\n  }\n\n  async _handleSocketOpen (message) {\n    this._nextReconnect = 0;\n    this._reconnectAttempts = 0;\n    if (this._reconnector) clearTimeout(this._reconnector);\n    this._state.status = 'CONNECTED';\n    this.emit('ready');\n  }\n\n  async executeMethod (name, params = []) {\n    const call = Message.fromVector([P2P_CALL, JSON.stringify([name, params])]);\n    console.log('call:', call);\n    console.log('raw:', call.toRaw());\n    return this.socket.send(call.toRaw());\n  }\n\n  async connect () {\n    this._state.status = 'CONNECTING';\n\n    try {\n      this.socket = new WebSocket(this.endpoint);\n      console.log('socket:', this.socket);\n    } catch (exception) {\n      console.error('[FABRIC:REMOTE]', 'Unable to connect:', exception);\n    }\n\n    if (this.socket) {\n      this.socket.binaryType = 'arraybuffer';\n      this.socket.addEventListener('close', this._handleSocketClose.bind(this));\n      this.socket.addEventListener('open', this._handleSocketOpen.bind(this));\n      this.socket.addEventListener('message', this._handleSocketMessage.bind(this));\n      this.socket.addEventListener('error', this._handleSocketError.bind(this));\n    }\n\n    return this;\n  }\n\n  /**\n   * Enumerate the available Resources on the remote host.\n   * @return {Configuration} An object with enumerable key/value pairs for the Application Resource Contract.\n   */\n  async enumerate () {\n    const options = await this._OPTIONS('/');\n    const results = [];\n\n    for (const name in options) {\n      const definition = options[name];\n      results.push({\n        name: definition.name,\n        description: definition.description,\n        components: Object.assign({\n          list: 'maki-resource-list',\n          view: 'maki-resource-view'\n        }, definition.components),\n        routes: definition.routes,\n        attributes: definition.attributes,\n        names: definition.names\n      });\n    }\n\n    return options;\n  }\n\n  /**\n   * Make an HTTP request to the configured authority.\n   * @param {String} type One of `GET`, `PUT`, `POST`, `DELETE`, or `OPTIONS`.\n   * @param {String} path The path to request from the authority.\n   * @param {Object} [params] Options.\n   * @returns {FabricHTTPResult}\n   */\n  async request (type, path, params = {}) {\n    const self = this;\n    const parts = self.settings.authority.split(':');\n\n    // TODO: use onion address for secure mode\n    const host = parts[0] || ((self.secure) ? 'localhost' : 'localhost');\n    let port = parts[1] || ((self.secure) ? 443 : 80);\n\n    if (this.settings.port) {\n      port = this.settings.port;\n    }\n\n    const protocol = (!self.secure) ? 'http' : 'https';\n    let url = `${protocol}://${host}:${port}${path}`;\n\n    let result = null;\n    let response = null;\n    let headers = {\n      'Accept': CONTENT_TYPE,\n      'Content-Type': CONTENT_TYPE\n    };\n\n    let opts = {\n      method: type,\n      headers: headers\n    };\n\n    // TODO: break out into independent auth module\n    if (this.settings.username || this.settings.password) {\n      headers['Authorization'] = `Basic ${Buffer.from([\n        this.settings.username || '',\n        this.settings.password || ''\n      ].join(':')).toString('base64')}`;\n    }\n\n    switch (params.mode) {\n      case 'query':\n        url += '?' + querystring.stringify(params.body);\n        break;\n      default:\n        try {\n          opts.body = JSON.stringify(params.body);\n        } catch (exception) {\n          console.error('[FABRIC:REMOTE] Could not prepare request:', exception);\n        }\n\n        opts = Object.assign(opts, {\n          body: params.body || null\n        });\n        break;\n    }\n\n    // Core Logic\n    try {\n      response = await fetch(url, opts);\n    } catch (e) {\n      self.emit('error', `[REMOTE] exception: ${e}`);\n    }\n\n    if (!response) {\n      return {\n        status: 'error',\n        message: 'No response to request.'\n      };\n    }\n\n    switch (response.status) {\n      case 404:\n        result = {\n          status: 'error',\n          message: 'Document not found.'\n        };\n        break;\n      default:\n        if (response.ok) {\n          const formatter = parser.parse(response.headers.get('content-type'));\n          switch (formatter.type) {\n            case 'application/json':\n              try {\n                result = await response.json();\n              } catch (E) {\n                console.error('[REMOTE]', 'Could not parse JSON:', E);\n              }\n              break;\n            default:\n              if (this.settings.verbosity >= 4) self.emit('warning', `[FABRIC:REMOTE] Unhandled headers content type: ${formatter.type}`);\n              result = await response.text();\n              break;\n          }\n        } else {\n          if (this.settings.verbosity >= 4) console.warn('[FABRIC:REMOTE]', 'Unmanaged HTTP status code:', response.status);\n\n          try {\n            result = response.json();\n          } catch (exception) {\n            result = response.text();\n          }\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  async ping () {\n    this.send({\n      created: (new Date()).toISOString(),\n      type: 'PING'\n    });\n  }\n\n  async send (message) {\n    const msg = Message.fromVector(['GenericMessage', JSON.stringify(message)]);\n    const raw = msg.toRaw();\n\n    console.log('raw:', raw);\n    console.log('raw (string):', raw.toString('hex'));\n\n    const actor = new Actor({ content: raw.toString('hex') });\n    this.socket.send(raw);\n    return actor.id;\n  }\n\n  async sendAsJSON (message) {\n    this.socket.send({\n      content: message\n    });\n  }\n\n  /**\n   * HTTP PUT against the configured Authority.\n   * @param  {String} path - HTTP Path to request.\n   * @param  {Object} body - Map of parameters to supply.\n   * @return {FabricHTTPResult|String} Result of request.\n   */\n  async _PUT (key, body) {\n    return this.request('put', key, { body });\n  }\n\n  /**\n   * HTTP GET against the configured Authority.\n   * @param  {String} path - HTTP Path to request.\n   * @param  {Object} params - Map of parameters to supply.\n   * @return {FabricHTTPResult|String} Result of request.\n   */\n  async _GET (key, params) {\n    return this.request('get', key, params);\n  }\n\n  /**\n   * HTTP POST against the configured Authority.\n   * @param  {String} path - HTTP Path to request.\n   * @param  {Object} params - Map of parameters to supply.\n   * @return {FabricHTTPResult|String} Result of request.\n   */\n  async _POST (key, obj, params = {}) {\n    let result = null;\n    let options = null;\n\n    switch (params.mode) {\n      case 'query':\n        options = Object.assign({}, {\n          body: obj,\n          mode: 'query'\n        });\n        break;\n      default:\n        options = Object.assign({}, params, {\n          body: obj,\n          mode: 'body'\n        });\n        break;\n    }\n\n    result = await this.request('post', key, options);\n\n    return result;\n  }\n\n  /**\n   * HTTP OPTIONS on the configured Authority.\n   * @param  {String} path - HTTP Path to request.\n   * @param  {Object} params - Map of parameters to supply.\n   * @return {Object} - Full description of remote resource.\n   */\n  async _OPTIONS (key, params) {\n    return this.request('options', key, params);\n  }\n\n  /**\n   * HTTP PATCH on the configured Authority.\n   * @param  {String} path - HTTP Path to request.\n   * @param  {Object} body - Map of parameters to supply.\n   * @return {Object} - Full description of remote resource.\n   */\n  async _PATCH (key, body) {\n    return this.request('patch', key, { body });\n  }\n\n  /**\n   * HTTP DELETE on the configured Authority.\n   * @param  {String} path - HTTP Path to request.\n   * @param  {Object} params - Map of parameters to supply.\n   * @return {Object} - Full description of remote resource.\n   */\n  async _DELETE (key, params) {\n    return this.request('delete', key, params);\n  }\n\n  async _SEARCH (key, params) {\n    return this.request('search', key, params);\n  }\n}\n\nmodule.exports = Remote;\n","'use strict';\n\n// TODO: evaluate why have to climb tree?\nconst playnet = require('../../node_modules/@fabric/core/settings/playnet');\n\nmodule.exports = {\n  host: 'faucet.playnet.portaldefi.com',\n  port: 443,\n  secure: true,\n  seed: null,\n  status: 'PAUSED',\n  balances: [\n    { asset: 'Bitcoin', symbol: 'BTC', confirmed: 0, type: 'confirmed' },\n    { asset: 'Liquid BTC (LBTC)', symbol: 'BTC', confirmed: 0, type: 'confirmed' },\n    { asset: 'Shyft', symbol: 'SHFT', confirmed: 0, type: 'confirmed' },\n    { asset: 'Bitcoin (testnet)', symbol: 'TBTC', confirmed: 0, type: 'confirmed' },\n    { asset: 'Bitcoin (regtest)', symbol: 'RBTC', confirmed: 0, type: 'confirmed' },\n    { asset: 'BTC A', symbol: 'BTCA', confirmed: 0, type: 'confirmed' },\n    { asset: 'BTC B', symbol: 'BTCB', confirmed: 0, type: 'confirmed' },\n    { asset: 'Lightning BTC', symbol: 'BTC', confirmed: 0.001, type: 'outbound' },\n    { asset: 'Lightning BTC', symbol: 'BTC', confirmed: 0.001, type: 'inbound' }\n  ],\n  chains: [\n    { name: 'Fabric (playnet)', asset: 'PFAB', tip: '???' },\n    { name: 'Bitcoin (mainnet)', asset: 'BTC', tip: '???', genesis: '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f' },\n    { name: 'Bitcoin (regtest)', asset: 'RBTC', tip: '???' },\n    { name: 'Bitcoin (testnet)', asset: 'TBTC', tip: '???' },\n    { name: 'BTC A (regtest)', asset: 'BTCA', tip: '???' },\n    { name: 'BTC B (regtest)', asset: 'BTCB', tip: '???' },\n    { name: 'Ethereum (Ropsten)', asset: 'ETHR', tip: '???' }\n  ],\n  channels: [],\n  keys: [],\n  identity: {\n    id: '',\n    seed: playnet.key.seed\n  },\n  nodes: [\n/**/'localhost:9977', // BTC   `                                              /**/\n/**/'localhost:9978', // BTCA   \\___                                          /**/\n/**/'localhost:9979', // BTCB   /    }- Together these are the first 3 chains /**/\\\n    'localhost:9980', // Liquid\n    'localhost:9981', // Shyft\n  ],\n  orders: [],\n  peers: [\n    { id: '???', alias: 'NUEVO', host: 'localhost', port: '7777', asset: 'BTC' }\n  ],\n  transactions: []\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","// Defaults\nimport * as state from '../settings/state';\n\n// Dependencies\nimport * as EC from '../../node_modules/elliptic/lib/elliptic/ec';\nimport merge from 'lodash.merge';\nimport React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import * as d3 from 'd3';\n// import * as D3GraphViz from 'd3-graphviz';\n// import { Graphviz } from 'graphviz-react';\n\n// Components\n// import FabricStateMapper from '../StateMapper';\nimport * as Actor from '@fabric/core/types/actor';\nimport { Card } from 'semantic-ui-react';\n\nclass FabricComponent extends Component {\n  constructor (props) {\n    super(props);\n\n    if (props.import) {\n      this.state = merge({\n        integrity: null,\n        status: 'PAUSED'\n      }, state, props);\n    }\n\n    // Fabric Actor\n    this.actor = new Actor(this.state);\n    this.ec = new EC('secp256k1');\n\n    // React Element\n    this.ref = React.createRef();\n\n    return this;\n  }\n\n  get genesis () {\n    return (this.actor) ? this.actor.id : '00000000000000000000000000000000';\n  }\n\n  get dochash () {\n    return (this.actor) ? this.actor.id : '00000000000000000000000000000000';\n  }\n\n  get link () {\n    return `fabric:${this.dochash}`;\n  }\n\n  get integrity () {\n    return 'sha256-deadbeefbabe';\n  }\n\n  componentDidMount () {\n    this.start();\n    console.log('[FABRIC:COMPONENT]', 'Mounted:', this);\n  }\n\n  componentWillReceiveProps (props) {\n    this.setState({\n      hash: props.hash\n    });\n  }\n\n  render () {\n    const dot = 'graph{a--b}';;\n    return (\n      <>\n        <fabric-component ref={this.ref}>\n          <Card>\n            <Card.Content>\n              <fabric-graph>\n                <svg id='graph' />\n                {/* <Graphviz dot={dot} /> */}\n              </fabric-graph>\n            </Card.Content>\n            <Card.Content>{this.props.children}</Card.Content>\n          </Card>\n        </fabric-component>\n      </>\n    );\n  }\n\n  start () {\n    const actor = new Actor(this.state);\n    console.log('actor:', actor);\n    console.log('actor ID:', actor.id.constructor.name, actor.id);\n    this.setState({ hash: actor.id });\n\n    // this.setState({ status: 'STARTED' });\n    // d3.select('#graph').graphviz().renderDot('digraph {a -> b}');\n\n    return this;\n  }\n}\n\nexport default FabricComponent;\n\n// TODO: debug why this can't be used on this parent class...\n// ```\n// TypeError: Class extends value #<Object> is not a constructor or null\n// Module.<anonymous>\n// src/components/FabricIdentityManager.js:19\n//   16 | import IdentityPicker from './IdentityPicker';\n//   17 | import SeedEntryForm from './SeedEntryForm';\n//   18 | \n// > 19 | class FabricIdentityManager extends FabricComponent {\n//   20 |   constructor (props) {\n//   21 |     super(props);\n//   22 | \n// ```\n// export default connect(FabricStateMapper)(FabricComponent);\n//\n// ...\n// End of @fabric/core/types/component\n","// State\nimport * as defaults from '../settings/state';\n\n// Dependencies\nimport merge from 'lodash.merge';\nimport FabricComponent from '../types/component';\n\n// Components\nimport {\n  Button,\n  Card,\n  Feed,\n  Icon,\n  Label\n} from 'semantic-ui-react';\n\n// Fabric Types\n// import * as Store from '@fabric/core/types/store';\n// import * as Worker from '@fabric/core/types/worker';\nimport * as Remote from '@fabric/http/types/remote';\n\nclass FabricBridge extends FabricComponent {\n  constructor (props) {\n    super(props);\n\n    this.settings = Object.assign({\n      host: 'localhost',\n      port: 9999,\n      secure: false\n    }, defaults, props);\n\n    this.state = merge({\n      integrity: 'sha256-deadbeefbabe',\n      status: 'disconnected',\n      messages: [],\n      meta: {\n        messages: {\n          count: 0\n        }\n      }\n    }, this.settings);\n\n    console.log('bridge settings:', this.settings);\n\n    this.remote = new Remote({\n      host: this.settings.host,\n      port: this.settings.port,\n      secure: this.settings.secure\n    });\n\n    /* this.agent = new Worker({\n      service: main,\n      settings: settings\n    }); */\n\n    return this;\n  }\n\n  _handleRemoteMessage (message) {\n    console.log('Remote message:', message);\n    this._syncState();\n  }\n\n  _handleRemoteError (error) {\n    console.log('Remote error:', error);\n  }\n\n  _syncState () {\n    this.setState({\n      status: this.remote._state.status,\n      messages: this.remote._state.messages,\n      meta: this.remote._state.meta\n    });\n  }\n\n  componentDidMount () {\n    console.log('bridge mounted! starting...');\n    // this.agent.executeMethod('connect');\n    // this.process.executeMethod('connect');\n    this.start();\n  }\n\n  connect () {\n    this._syncState();\n    this.remote.connect();\n    this._syncState();\n  }\n\n  executeMethod (name, params) {\n    return this.remote.executeMethod(name, params);\n  }\n\n  ping () {\n    this.remote.ping();\n  }\n\n  render () {\n    return (\n      <>\n        <Card fluid>\n          <Card.Content>\n            <Button.Group floated='right'>\n              <Button onClick={this.ping.bind(this)}>Ping <Icon name='info' /></Button>\n              <Button onClick={this.connect.bind(this)}>Connect <Icon name='lightning' /></Button>\n            </Button.Group>\n            <Card.Header as='h3'>Bridge</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Feed>\n              {this.state.messages.map((message, i) => {\n                return (\n                  <Feed.Event size='small' key={i} style={{ fontSize: '0.8em', fontFamily: 'monospace' }}>\n                    <Feed.Content>\n                      <div style={{color: 'black'}}>{JSON.stringify(message, null, '  ')}</div>\n                    </Feed.Content>\n                  </Feed.Event>\n                );\n              })}\n            </Feed>\n          </Card.Content>\n          <Card.Content extra>\n            <Label><Icon name='info' /> {this.remote._state.status}</Label>\n            <Label><Icon name='mail' /> {this.remote._state.meta.messages.count}</Label>\n          </Card.Content>\n        </Card>\n      </>\n    );\n  }\n\n  async send (message) {\n    return this.remote.send(message);\n  }\n\n  async start () {\n    this.remote.on('ready', this.props.remoteReady.bind(this));\n    this.remote.on('message', this._handleRemoteMessage.bind(this));\n    this.remote.on('error', this._handleRemoteError.bind(this));\n    this.connect();\n  }\n}\n\nexport default FabricBridge;\n","import FabricComponent from '../types/component';\n\n// Components\nimport {\n  Button,\n  // Card,\n  // Container,\n  Icon,\n  // Grid,\n  Header,\n  // Label,\n  // Menu,\n  // Segment,\n  Table,\n  Card\n} from 'semantic-ui-react';\n\nclass TransactionList extends FabricComponent {\n  constructor (props) {\n    super(props);\n    this.state = {\n      transactions: [],\n      integrity: 'sha256-deadbeefbabe'\n    };\n  }\n\n  _addKey (key) {\n    // TODO: merge proper\n    this.setState({ keys: this.state.keys.concat(key) });\n  }\n\n  render () {\n    return (\n      <>\n        <div className='ui vertical stripe segment'>\n          <div className='ui stackable grid container'>\n            <div className='row'>\n              <div className='column'>\n                <Card fluid>\n                  <Card.Content>\n                    <Header><h1><Icon name='tasks' /> Transactions</h1></Header>\n                    <Table celled>\n                      <Table.Header>\n                        <Table.Row>\n                          <Table.HeaderCell>ID</Table.HeaderCell>\n                          <Table.HeaderCell>Version</Table.HeaderCell>\n                          <Table.HeaderCell>Inputs</Table.HeaderCell>\n                          <Table.HeaderCell>Outputs</Table.HeaderCell>\n                          <Table.HeaderCell>Signature</Table.HeaderCell>\n                        </Table.Row>\n                      </Table.Header>\n                      <Table.Body>\n                        {this.state.transactions.map((transaction, index) => {\n                          return (\n                            <Table.Row key={index}>\n                              <Table.Cell>{transaction.id}</Table.Cell>\n                              <Table.Cell>{transaction.version}</Table.Cell>\n                              <Table.Cell>{transaction.inputs}</Table.Cell>\n                              <Table.Cell>{transaction.outputs}</Table.Cell>\n                              <Table.Cell>{transaction.signature}</Table.Cell>\n                            </Table.Row>\n                          );\n                        })}\n                      </Table.Body>\n                      {/* <Table.Footer>\n                        <Table.Row>\n                          <Table.HeaderCell colSpan='3'>\n                            <Menu floated='right' pagination>\n                              <Menu.Item as='a' icon>\n                                <Icon name='chevron left' />\n                              </Menu.Item>\n                              <Menu.Item as='a'>1</Menu.Item>\n                              <Menu.Item as='a'>2</Menu.Item>\n                              <Menu.Item as='a'>3</Menu.Item>\n                              <Menu.Item as='a'>4</Menu.Item>\n                              <Menu.Item as='a' icon>\n                                <Icon name='chevron right' />\n                              </Menu.Item>\n                            </Menu>\n                          </Table.HeaderCell>\n                        </Table.Row>\n                      </Table.Footer> */}\n                    </Table>\n                  </Card.Content>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default TransactionList;\n","'use strict';\n\n// Components\nimport {\n  Button,\n  // Container,\n  Dropdown,\n  Form,\n  // Grid,\n  Header,\n  Icon,\n  Image,\n  Input,\n  // Menu,\n  Modal,\n  // Segment\n} from 'semantic-ui-react';\n\n// Fabric Types\nimport FabricComponent from '../types/component';\n\nclass FabricModal extends FabricComponent {\n  constructor (settings = {}) {\n    super(settings);\n\n    this.state = {\n      open: false\n    };\n\n    return this;\n  }\n\n  render () {\n    function setOpen (open) {\n\n    }\n\n    return (\n      <Modal\n        ref={this.props.modal}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={this.state.open}>\n        <Modal.Header>Select a Photo</Modal.Header>\n        <Modal.Content image>\n          <Image size='medium' src='/images/avatar/large/rachel.png' wrapped />\n          <Modal.Description>\n            <Header>Default Profile Image</Header>\n            <p>\n              We've found the following gravatar image associated with your e-mail\n              address.\n            </p>\n            <p>Is it okay to use this photo?</p>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='black' onClick={() => setOpen(false)}>\n            Nope\n          </Button>\n          <Button\n            content=\"Yep, that's me\"\n            labelPosition='right'\n            icon='checkmark'\n            onClick={() => setOpen(false)}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default FabricModal;\n","// Cryptography\nimport { createHash } from 'crypto';\n\n// Dependencies\nimport * as bitcoin from 'bitcoinjs-lib';\n\n// React\nimport merge from 'lodash.merge';\nimport React from 'react';\n// import { connect } from 'react-redux';\n// import FabricStateMapper from '../StateMapper';\n\n// Fabric Types\nimport FabricComponent from '../types/component';\n\n// Fabric Components\nimport FabricModal from './FabricModal';\n\n// Fabric Services\n// import Bitcoin from '@fabric/core/services/bitcoin';\n\n// Components\nimport {\n  Button,\n  Form,\n  Input\n} from 'semantic-ui-react';\n\n// Internals\n// import FabricKeyPair from './FabricKeyPair';\n\n// Fabric Types\nimport * as Actor from '@fabric/core/types/actor';\n// import * as Key from '@fabric/core/types/key';\n// import * as Signer from '@fabric/core/types/signer';\n\nclass FaucetDripForm extends FabricComponent {\n  constructor (props) {\n    super(props);\n\n    this.settings = merge({\n      network: 'regtest'\n    }, props);\n\n    /* this.wallet = new Wallet({\n      network: this.settings.network\n    }); */\n\n    // this.key = new Key(this.settings);\n    // this._key = new bcoin.hd.key();\n\n    // TODO: prepare Fabric\n    // i.e., use _state here, then import from getter and apply properties\n    // _from_ @react\n    this.state = merge({\n      address: null,\n      content: {\n        requests: []\n      },\n      requests: {},\n      secret: Actor.randomBytes(32), // solution hash (revealed on trade)\n      status: 'LOADING'\n    }, props);\n\n    // TODO: evaluate removing ZMQ\n    // this.bitcoin = new Bitcoin(this.settings);\n\n    return this;\n  }\n\n  get networks () {\n    return {\n      'mainnet': bitcoin.networks.mainnet,\n      'regtest': bitcoin.networks.regtest,\n      'testnet': bitcoin.networks.testnet\n    };\n  }\n\n  _handleAddressChange (e) {\n    this.setState({ address: e.target.value });\n    const isValid = this.validateAddress(e.target.value);\n    if (!isValid) {\n      this.setState({\n        status: 'ERROR',\n        errors: [\n          'Invalid Bitcoin address.'\n        ]\n      });\n    }\n  }\n\n  _handleSecretChange (e) {\n    this.setState({ secret: e.target.value });\n  }\n\n  _handleSubmitButtonClick (e) {\n    console.log('submit button click:', e);\n  }\n\n  _handleChange (e) {\n    const fields = { ...this.state.fields, [e.target.name]: e.target.value };\n    // TODO: merge old state\n    this.setState({ fields: fields });\n  }\n\n  handleChange (e) {\n    this.setState({ address: e.target.value });\n  }\n\n  render () {\n    return (\n      <>\n        <Form\n          ref={this.props.form}\n          loading={(this.state.status === 'LOADING' ? 'loading' : undefined)}\n          disabled={(this.state.status === 'LOADING' ? 'disabled' : undefined)}\n          onSubmit={this.props.onSubmit.bind(this)} onChange={this.handleChange.bind(this)}>\n          <Form.Field>\n            <label>Request a deposit to&hellip;</label>\n            <div className='ui input'>\n              <Input ref={this.props.field} action type='text' placeholder='Enter a Bitcoin address here' value={this.state.address} />\n              <Button ref={this.props.button}\n                attached\n                type='submit'\n                loading={(this.state.status === 'SUBMITTING') ? 'loading' : undefined}\n                disabled={(this.state.status === 'SUBMITTING') ? 'disabled' : undefined}\n                color='green' content='Request' icon='right chevron' labelPosition='right' onClick={this.props.onSubmit.bind(this)} />\n            </div>\n            <FabricModal />\n          </Form.Field>\n        </Form>\n      </>\n    );\n  }\n\n  start () {\n    console.log('[FAUCET:DRIPS]', 'Starting component...');\n    super.start();\n    this.sync();\n    return this;\n  }\n\n  sync () {\n    const preimage = createHash('sha256').update(this.state.secret).digest('hex');\n    this.setState({ preimage: preimage });\n    return this;\n  }\n\n  validateAddress (address) {\n    try {\n      bitcoin.address.toOutputScript(address, this.networks[this.settings.network]);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\n// export default PortalOrderForm;\nexport default FaucetDripForm;\n","// State\nimport * as defaults from './settings/state';\n\n// Dependencies\nimport React from 'react';\nimport {\n  Link\n} from 'react-router-dom';\n\n// Components\nimport {\n  Card,\n  Container,\n  Divider,\n  Icon,\n  // Grid,\n  // Menu,\n  Segment,\n  Visibility\n} from 'semantic-ui-react';\n\nimport FabricComponent from './types/component';\n\nimport FabricBridge from './components/FabricBridge';\n// import FabricDebugger from './components/FabricDebugger';\n\nimport FaucetDripForm from './components/FaucetDripForm';\n// import FabricIdentityManager from './components/FabricIdentityManager';\n// import PortalMenu from './components/PortalMenu';\n\nclass Home extends FabricComponent {\n  constructor (props) {\n    super(props);\n\n    this.settings = Object.assign({\n      debug: false,\n      host: 'localhost',\n      port: 7222,\n      secure: false,\n      status: 'PAUSED'\n    }, defaults, props);\n\n    // TODO: prepare Fabric\n    // i.e., use _state here, then import from getter and apply properties\n    // _from_ @react\n    this.state = Object.assign({}, this.settings);\n\n    this.bridge = React.createRef();\n    this.button = React.createRef();\n    this.field = React.createRef();\n    this.form = React.createRef();\n    this.modal = React.createRef();\n\n    return;\n  }\n\n  onSubmit (e) {\n    const self = this;\n\n    this.form.current.setState({ status: 'LOADING' });\n    this.button.current.setState({ status: 'REQUESTING'});\n\n    const address = this.form.current.state.address;\n    const message = {\n      type: 'Call',\n      data: {\n        method: 'DripRequest',\n        params: [ address ]\n      }\n    };\n\n    if (this.settings.debug) console.log('Message to send over bridge:', message);\n    setTimeout(function () {\n      self.bridge.current.send(message).then((result) => {\n        if (self.settings.debug) console.log('Message sent over bridge, result:', result);\n        self.field.current.value = '';\n        self.field.current.setState({ address: '' });\n        self.form.current.setState({ status: 'LOADED' });\n        self.button.current.setState({ status: 'LOADED '});\n      });\n    }, 1000);\n  }\n\n  render () {\n    return (\n      <>\n        <fabric-faucet-home ref={this.ref}>\n          <Visibility onBottomPassed={this._handleMastheadBottomPassed.bind(this)}>\n            <Segment className='ui inverted vertical masthead center aligned segment'>\n              <Container className='ui text container'>\n                <h1 className='ui inverted header'><Icon name='tint' /> bitfaucet</h1>\n                <h2>The official <code>@fabric/playnet</code> faucet.</h2>\n                <Container className='left aligned' style={{ marginTop: '5em' }}>\n                  <Card fluid>\n                    <Card.Content>\n                      <FaucetDripForm ref={this.form} button={this.button} field={this.field} onSubmit={this.onSubmit.bind(this)} />\n                    </Card.Content>\n                  </Card>\n                  <Card fluid style={(this.state.debug) ? {} : { display: 'none' }}>\n                    <Card.Content>\n                      <FabricBridge ref={this.bridge} remoteReady={this._handleRemoteReady.bind(this)} secure={this.state.secure} host={this.state.host} port={this.state.port} debug={this.state.debug} state={this.state} />\n                    </Card.Content>\n                  </Card>\n                </Container>\n              </Container>\n            </Segment>\n          </Visibility>\n        </fabric-faucet-home>\n      </>\n    );\n  }\n\n  _handleBridgeChange (event) {\n    console.log('bridge change:', event);\n  }\n\n  _handleMastheadBottomPassed (e, { calculations }) {\n    console.log('vis change:', e, calculations);\n    this.setState({ calculations });\n  }\n\n  async _handleRemoteReady () {\n    console.log('Remote ready!');\n    this.form.current.setState({ status: 'READY' });\n  }\n}\n\nexport default Home;\n","// Dependencies\nimport * as state from './settings/state';\nimport * as merge from 'lodash.merge';\n\n// React\nimport React from 'react';\n// import { Provider } from 'react-redux';\n// import { createStore } from 'redux';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from 'react-router-dom';\n// import * as Fabric from '@fabric/core';\n\n// Stylesheets\nimport './App.css';\nimport './semantic.css';\nimport './index.css';\n\n// Components\n/* import {\n  Container,\n  Divider,\n  Grid,\n  Icon,\n  Menu,\n  Segment,\n  Sidebar,\n  // Visibility\n} from 'semantic-ui-react'; */\n\n// Fabric Types\nimport Actor from '@fabric/core/types/actor';\nimport FabricComponent from './types/component';\n\n// Fabric Components\nimport FabricBridge from './components/FabricBridge';\nimport FabricDebugger from './components/FabricDebugger';\n// import FabricIdentityManager from './components/FabricIdentityManager';\n// import FabricNodeList from './components/FabricNodeList';\nimport FabricTransactionList from './components/FabricTransactionList';\n\n// Portal\nimport Home from './Home';\n\n/**\n * The Portal web application.\n */\nclass App extends FabricComponent {\n  constructor (settings) {\n    super(settings);\n\n    this.settings = merge({}, state, settings);\n\n    // this.fabric = new Fabric();\n    this.state = merge({\n      actor: null,\n      host: 'localhost',\n      integrity: null,\n      snapshots: []\n    }, state, settings);\n\n    return this;\n  }\n\n  _handleBridgeChange (event) {\n    console.log('bridge change:', event);\n  }\n\n  componentDidMount () {\n    const proof = new Actor(this.state);\n    return this;\n  }\n\n  render () {\n    return (\n      <react-application id='root'>\n        <Router>\n          <div className='pusher'>\n            <Routes>\n              <Route path='/' exact element={<Home state={this.state} balances={this.state.balances} keys={this.state.keys} host={this.state.host} />} />\n              <Route path='/transactions' element={<FabricTransactionList state={this.state} balances={this.state.balances} keys={this.state.keys} />} />\n            </Routes>\n            {/*\n            <Segment className='ui inverted vertical footer segment'>\n              <Container className='ui container'>\n                <FabricDebugger />\n                <Divider />\n                <FabricBridge onChange={this._handleBridgeChange.bind(this)} port={this.settings.port} />\n              </Container>\n            </Segment>\n            */}\n          </div>\n        </Router>\n      </react-application>\n    );\n  }\n}\n\nexport default App;\n","/**\n * Copyright: 2019, Fabric Labs\n */\n\n// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\n// import { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\n// import createSagaMiddleware from 'redux-saga';\n\n// Assets\nimport * as state from './settings/state';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\n// Components\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// Functions\n// import sendToAnalytics from './functions/sendToAnalytics';\n\n// State\nimport * as initialState from './settings/state';\n\nfunction reducer (state = initialState, action = { type: 'UNDEFINED_ACTION' }) {\n  switch (action.type) {\n    case 'SEED_ADDED':\n      return {\n        seed: state.seed\n      };\n    case 'RESET':\n      return {\n        status: 'RESET'\n      };\n    default:\n      return state;\n  }\n}\n\n// const sagas = createSagaMiddleware();\n// const store = createStore(reducer, applyMiddleware(sagas));\n\n// sagas.run(RPCRequest);\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store}> */}\n    {/* <Provider> */}\n      <App state={state} host={state.host} />\n    {/* </Provider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// TODO: enable Service Worker by disabling the line below, then test Fabric's\n// cache and the `@fabric/core/types/store` class — latest should be completely\n// isomorphic, so we're almost fully able to run in the browser now!\nserviceWorker.unregister();\n\n// reportWebVitals(sendToAnalytics);\n"],"sourceRoot":""}